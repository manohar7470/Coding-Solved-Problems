class Solution {
    int getMinDiff(int[] arr, int n, int k) {
        // code here
/*Q -Given an array arr[] denoting heights of N towers and a positive integer K.

For each tower, you must perform exactly one of the following operations exactly once.

Increase the height of the tower by K
Decrease the height of the tower by K
Find out the minimum possible difference between the height of the shortest and tallest towers after you have modified each tower.

You can find a slight modification of the problem here.
Note: It is compulsory to increase or decrease the height by K for each tower. After the operation, the resultant array should not contain any negative integers.*/
        //1 1 2 2 3 3 
        //1 1 4 6 6 8 9 10
       Arrays.sort(arr);
       int ans=arr[n-1]-arr[0];
       int sm=arr[0]+k;
       int lg=arr[n-1]-k;
       for(int i=0;i<n-1;i++)
       {
           int mn=Math.min(sm,arr[i+1]-k);
           int mx=Math.max(lg,arr[i]+k);
           if(mn<0)
           continue;
           ans=Math.min(ans,mx-mn);
       }
       return ans;
       
    }
}

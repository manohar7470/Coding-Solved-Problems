 int findOnce(int arr[], int n)
    {
        // Complete this function
       if(n==1){
            return arr[0];
        }
        if(arr[0]!=arr[1]) return arr[0];
        if(arr[n-1]!=arr[n-2]) return arr[n-1];

        int low = 1, high = n-2;
        int mid =0;
        while(low<=high){
            mid = (low+high)/2;
            if(arr[mid]!=arr[mid-1] && arr[mid]!=arr[mid+1]){
                return arr[mid];
            }

                if((mid%2==1 && arr[mid-1]==arr[mid]) || mid%2==0 && arr[mid]==arr[mid+1]){
                   //we're in left half and element in right. eliminate left half
                   low=mid+1;
                } else {
                   high=mid-1;
                }

        }
        
        return -1;
        
    }

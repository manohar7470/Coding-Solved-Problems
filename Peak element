#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


/* The function should return the index of any
   peak element present in the array */

// arr: input array
// n: size of array
int peakElement(int arr[], int n)
{
   // Your code here
   if(n==1)
   return 0;
   if(arr[0]>arr[1])
   return 0;
   if(arr[n-1]>arr[n-2])
   return n-1;
   int l=0;int r=n-1;
   while(l<=r)
   {
       int m=(l+r)/2;
       if(m>0&&m<n-1&&arr[m]>arr[m-1] &&arr[m]>arr[m+1])
       return m;
       else if(m>0 &&arr[m]<arr[m-1])
       r=m-1;
       else if(m<n-1&&arr[m]< arr[m+1])
       l=m+1;
       else
       {
           l++;r--;
       }
   }
   return -1;
}

// { Driver Code Starts.

int main() {
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n], tmp[n];
		for(int i=0;i<n;i++)
		{
			cin>>a[i];
			tmp[i] = a[i];
		}
		bool f=0;
		int A = peakElement(tmp,n);
		
		if(n==1)
		f=1;
		else
		if(A==0 and a[0]>=a[1])
		f=1;
		else if(A==n-1 and a[n-1]>=a[n-2])
		f=1;
		else if(a[A] >=a[A+1] and a[A]>= a[A-1])
		f=1;
		else
		f=0;
		
		cout<<f<<endl;
		
	}

	return 0;
}  // } Driver Code Ends
